name: CI/CD Pipeline (DISABLED)

# CI/CD has been disabled as per project requirements
on:
  # Triggers have been disabled
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main, develop ]
  
  # Manual trigger only for emergency situations
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger (emergency use only)'
        required: true

jobs:
  # Backend Tests
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        cd apps/python_api
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run migrations
      run: |
        cd apps/python_api
        export DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db
        alembic upgrade head
    
    - name: Run tests
      run: |
        cd apps/python_api
        export DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db
        export JWT_SECRET_KEY=test_secret_key
        export JWT_ALGORITHM=HS256
        export ENVIRONMENT=test
        pytest -v

  # Frontend Tests
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies for Web App
      run: |
        cd apps/web
        npm install
    
    - name: Run tests for Web App
      run: |
        cd apps/web
        npm test
    
    - name: Install dependencies for Mobile App
      run: |
        cd apps/mobile
        npm install
    
    - name: Run tests for Mobile App
      run: |
        cd apps/mobile
        npm test

  # Build and Deploy
  build-and-deploy:
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    # Build and push Docker images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push API image
      uses: docker/build-push-action@v4
      with:
        context: ./apps/python_api
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/prime-investment-api:latest
    
    # Build Web App
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build Web App
      run: |
        cd apps/web
        npm install
        npm run build
    
    # Build Mobile App
    - name: Setup EAS
      run: npm install -g eas-cli
    
    - name: Build Android App
      run: |
        cd apps/mobile
        npm install
        eas build --platform android --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    
    - name: Build iOS App
      run: |
        cd apps/mobile
        eas build --platform ios --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}